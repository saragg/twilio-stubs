from twilio.jwt.access_token import AccessTokenGrant as AccessTokenGrant
from typing import Any, Optional

def deprecated(func: Any): ...

class ChatGrant(AccessTokenGrant):
    service_sid: Any = ...
    endpoint_id: Any = ...
    deployment_role_sid: Any = ...
    push_credential_sid: Any = ...
    def __init__(self, service_sid: Optional[Any] = ..., endpoint_id: Optional[Any] = ..., deployment_role_sid: Optional[Any] = ..., push_credential_sid: Optional[Any] = ...) -> None: ...
    @property
    def key(self): ...
    def to_payload(self): ...

class IpMessagingGrant(AccessTokenGrant):
    service_sid: Any = ...
    endpoint_id: Any = ...
    deployment_role_sid: Any = ...
    push_credential_sid: Any = ...
    def __init__(self, service_sid: Optional[Any] = ..., endpoint_id: Optional[Any] = ..., deployment_role_sid: Optional[Any] = ..., push_credential_sid: Optional[Any] = ...) -> None: ...
    @property
    def key(self): ...
    def to_payload(self): ...

class SyncGrant(AccessTokenGrant):
    service_sid: Any = ...
    endpoint_id: Any = ...
    def __init__(self, service_sid: Optional[Any] = ..., endpoint_id: Optional[Any] = ...) -> None: ...
    @property
    def key(self): ...
    def to_payload(self): ...

class VoiceGrant(AccessTokenGrant):
    incoming_allow: Any = ...
    outgoing_application_sid: Any = ...
    outgoing_application_params: Any = ...
    push_credential_sid: Any = ...
    endpoint_id: Any = ...
    def __init__(self, incoming_allow: Optional[Any] = ..., outgoing_application_sid: Optional[Any] = ..., outgoing_application_params: Optional[Any] = ..., push_credential_sid: Optional[Any] = ..., endpoint_id: Optional[Any] = ...) -> None: ...
    @property
    def key(self): ...
    def to_payload(self): ...

class ConversationsGrant(AccessTokenGrant):
    configuration_profile_sid: Any = ...
    def __init__(self, configuration_profile_sid: Optional[Any] = ...) -> None: ...
    @property
    def key(self): ...
    def to_payload(self): ...

class VideoGrant(AccessTokenGrant):
    room: Any = ...
    def __init__(self, room: Optional[Any] = ...) -> None: ...
    @property
    def key(self): ...
    def to_payload(self): ...

class TaskRouterGrant(AccessTokenGrant):
    workspace_sid: Any = ...
    worker_sid: Any = ...
    role: Any = ...
    def __init__(self, workspace_sid: Optional[Any] = ..., worker_sid: Optional[Any] = ..., role: Optional[Any] = ...) -> None: ...
    @property
    def key(self): ...
    def to_payload(self): ...

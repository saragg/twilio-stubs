from math import ceil as ceil
from twilio.base import values as values
from twilio.base.domain import Domain
from twilio.base.exceptions import TwilioRestException as TwilioRestException
from typing import Any, Optional

class Version:
    domain: Domain = ...
    version: Any = ...

    def __init__(self, domain: Any) -> None: ...

    def absolute_url(self, uri: Any) -> str: ...

    def relative_uri(self, uri: Any) -> str: ...

    def request(self, method: Any, uri: Any, params: Optional[Any] = ..., data: Optional[Any] = ..., headers: Optional[Any] = ..., auth: Optional[Any] = ..., timeout: Optional[Any] = ..., allow_redirects: bool = ...): ...

    @classmethod
    def exception(cls, method: Any, uri: Any, response: Any, message: Any): ...

    def fetch(self, method: Any, uri: Any, params: Optional[Any] = ..., data: Optional[Any] = ..., headers: Optional[Any] = ..., auth: Optional[Any] = ..., timeout: Optional[Any] = ..., allow_redirects: bool = ...): ...

    def update(self, method: Any, uri: Any, params: Optional[Any] = ..., data: Optional[Any] = ..., headers: Optional[Any] = ..., auth: Optional[Any] = ..., timeout: Optional[Any] = ..., allow_redirects: bool = ...): ...

    def delete(self, method: Any, uri: Any, params: Optional[Any] = ..., data: Optional[Any] = ..., headers: Optional[Any] = ..., auth: Optional[Any] = ..., timeout: Optional[Any] = ..., allow_redirects: bool = ...): ...

    def read_limits(self, limit: Optional[Any] = ..., page_size: Optional[Any] = ...): ...

    def page(self, method: Any, uri: Any, params: Optional[Any] = ..., data: Optional[Any] = ..., headers: Optional[Any] = ..., auth: Optional[Any] = ..., timeout: Optional[Any] = ..., allow_redirects: bool = ...): ...

    def stream(self, page: Any, limit: Optional[Any] = ..., page_limit: Optional[Any] = ...) -> None: ...

    def create(self, method: Any, uri: Any, params: Optional[Any] = ..., data: Optional[Any] = ..., headers: Optional[Any] = ..., auth: Optional[Any] = ..., timeout: Optional[Any] = ..., allow_redirects: bool = ...): ...

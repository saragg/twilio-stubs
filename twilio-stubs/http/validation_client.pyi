from collections import namedtuple
from twilio.base.exceptions import TwilioRestException as TwilioRestException
from twilio.compat import urlparse as urlparse
from twilio.http import HttpClient as HttpClient
from twilio.http.response import Response as Response
from twilio.jwt.validation import ClientValidationJwt as ClientValidationJwt
from typing import Any, Optional

ValidationPayload = namedtuple('ValidationPayload', ['method', 'path', 'query_string', 'all_headers', 'signed_headers', 'body'])

class ValidationClient(HttpClient):
    account_sid: Any = ...
    credential_sid: Any = ...
    api_key_sid: Any = ...
    private_key: Any = ...
    session: Any = ...
    def __init__(self, account_sid: Any, api_key_sid: Any, credential_sid: Any, private_key: Any, pool_connections: bool = ...) -> None: ...
    def request(self, method: Any, url: Any, params: Optional[Any] = ..., data: Optional[Any] = ..., headers: Optional[Any] = ..., auth: Optional[Any] = ..., timeout: Optional[Any] = ..., allow_redirects: bool = ...): ...
    def validate_ssl_certificate(self, client: Any) -> None: ...

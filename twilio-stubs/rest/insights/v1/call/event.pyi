from twilio.base import values as values
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page
from typing import Any, Optional

class EventList(ListResource):
    def __init__(self, version: Any, call_sid: Any) -> None: ...
    def stream(self, edge: Any = ..., limit: Optional[Any] = ..., page_size: Optional[Any] = ...): ...
    def list(self, edge: Any = ..., limit: Optional[Any] = ..., page_size: Optional[Any] = ...): ...
    def page(self, edge: Any = ..., page_token: Any = ..., page_number: Any = ..., page_size: Any = ...): ...
    def get_page(self, target_url: Any): ...

class EventPage(Page):
    def __init__(self, version: Any, response: Any, solution: Any) -> None: ...
    def get_instance(self, payload: Any): ...

class EventInstance(InstanceResource):
    class TwilioEdge:
        UNKNOWN_EDGE: str = ...
        CARRIER_EDGE: str = ...
        SIP_EDGE: str = ...
        SDK_EDGE: str = ...
        CLIENT_EDGE: str = ...
    class Level:
        UNKNOWN: str = ...
        DEBUG: str = ...
        INFO: str = ...
        WARNING: str = ...
        ERROR: str = ...
    def __init__(self, version: Any, payload: Any, call_sid: Any) -> None: ...
    @property
    def timestamp(self): ...
    @property
    def call_sid(self): ...
    @property
    def account_sid(self): ...
    @property
    def edge(self): ...
    @property
    def group(self): ...
    @property
    def level(self): ...
    @property
    def name(self): ...
    @property
    def carrier_edge(self): ...
    @property
    def sip_edge(self): ...
    @property
    def sdk_edge(self): ...
    @property
    def client_edge(self): ...

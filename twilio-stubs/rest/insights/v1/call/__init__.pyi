from twilio.base import values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page
from twilio.rest.insights.v1.call.event import EventList as EventList
from twilio.rest.insights.v1.call.metric import MetricList as MetricList
from twilio.rest.insights.v1.call.summary import CallSummaryList as CallSummaryList
from typing import Any, Optional

class CallList(ListResource):
    def __init__(self, version: Any) -> None: ...
    def get(self, sid: Any): ...
    def __call__(self, sid: Any): ...

class CallPage(Page):
    def __init__(self, version: Any, response: Any, solution: Any) -> None: ...
    def get_instance(self, payload: Any): ...

class CallContext(InstanceContext):
    def __init__(self, version: Any, sid: Any) -> None: ...
    def fetch(self): ...
    @property
    def events(self): ...
    @property
    def metrics(self): ...
    @property
    def summary(self): ...

class CallInstance(InstanceResource):
    def __init__(self, version: Any, payload: Any, sid: Optional[Any] = ...) -> None: ...
    @property
    def sid(self): ...
    @property
    def url(self): ...
    @property
    def links(self): ...
    def fetch(self): ...
    @property
    def events(self): ...
    @property
    def metrics(self): ...
    @property
    def summary(self): ...

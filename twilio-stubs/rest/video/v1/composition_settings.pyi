from twilio.base import values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page
from typing import Any

class CompositionSettingsList(ListResource):
    def __init__(self, version: Any) -> None: ...
    def get(self): ...
    def __call__(self): ...

class CompositionSettingsPage(Page):
    def __init__(self, version: Any, response: Any, solution: Any) -> None: ...
    def get_instance(self, payload: Any): ...

class CompositionSettingsContext(InstanceContext):
    def __init__(self, version: Any) -> None: ...
    def fetch(self): ...
    def create(self, friendly_name: Any, aws_credentials_sid: Any = ..., encryption_key_sid: Any = ..., aws_s3_url: Any = ..., aws_storage_enabled: Any = ..., encryption_enabled: Any = ...): ...

class CompositionSettingsInstance(InstanceResource):
    def __init__(self, version: Any, payload: Any) -> None: ...
    @property
    def account_sid(self): ...
    @property
    def friendly_name(self): ...
    @property
    def aws_credentials_sid(self): ...
    @property
    def aws_s3_url(self): ...
    @property
    def aws_storage_enabled(self): ...
    @property
    def encryption_key_sid(self): ...
    @property
    def encryption_enabled(self): ...
    @property
    def url(self): ...
    def fetch(self): ...
    def create(self, friendly_name: Any, aws_credentials_sid: Any = ..., encryption_key_sid: Any = ..., aws_s3_url: Any = ..., aws_storage_enabled: Any = ..., encryption_enabled: Any = ...): ...

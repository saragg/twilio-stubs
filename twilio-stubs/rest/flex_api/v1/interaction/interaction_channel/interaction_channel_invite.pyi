from typing import Optional, Any

from twilio.base import serialize as serialize, values as values
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page

class InteractionChannelInviteList(ListResource):
    def __init__(self, version, interaction_sid, channel_sid) -> None: ...
    def create(self, routing): ...
    def stream(self, limit: Optional[Any] | None = ..., page_size: Optional[Any] | None = ...): ...
    def list(self, limit: Optional[Any] | None = ..., page_size: Optional[Any] | None = ...): ...
    def page(self, page_token=..., page_number=..., page_size=...): ...
    def get_page(self, target_url): ...

class InteractionChannelInvitePage(Page):
    def __init__(self, version, response, solution) -> None: ...
    def get_instance(self, payload): ...

class InteractionChannelInviteInstance(InstanceResource):
    class Action:
        ACCEPT: str
        DECLINE: str
    class Type:
        TASKROUTER: str
    def __init__(self, version, payload, interaction_sid, channel_sid) -> None: ...
    @property
    def sid(self): ...
    @property
    def interaction_sid(self): ...
    @property
    def channel_sid(self): ...
    @property
    def routing(self): ...
    @property
    def url(self): ...

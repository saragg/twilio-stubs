from twilio.base import values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page
from typing import Any, Optional

class ExportConfigurationList(ListResource):
    def __init__(self, version: Any) -> None: ...
    def get(self, resource_type: Any): ...
    def __call__(self, resource_type: Any): ...

class ExportConfigurationPage(Page):
    def __init__(self, version: Any, response: Any, solution: Any) -> None: ...
    def get_instance(self, payload: Any): ...

class ExportConfigurationContext(InstanceContext):
    def __init__(self, version: Any, resource_type: Any) -> None: ...
    def fetch(self): ...
    def update(self, enabled: Any = ..., webhook_url: Any = ..., webhook_method: Any = ...): ...

class ExportConfigurationInstance(InstanceResource):
    def __init__(self, version: Any, payload: Any, resource_type: Optional[Any] = ...) -> None: ...
    @property
    def enabled(self): ...
    @property
    def webhook_url(self): ...
    @property
    def webhook_method(self): ...
    @property
    def resource_type(self): ...
    @property
    def url(self): ...
    def fetch(self): ...
    def update(self, enabled: Any = ..., webhook_url: Any = ..., webhook_method: Any = ...): ...

from twilio.base.exceptions import TwilioException as TwilioException
from twilio.base.obsolete import obsolete_client as obsolete_client
from twilio.compat import urlparse as urlparse, urlunparse as urlunparse
from twilio.http.http_client import TwilioHttpClient as TwilioHttpClient
from typing import Any, Optional

class Client:
    username: Any = ...
    password: Any = ...
    account_sid: Any = ...
    edge: Any = ...
    region: Any = ...
    auth: Any = ...
    http_client: Any = ...
    def __init__(self, username: Optional[Any] = ..., password: Optional[Any] = ..., account_sid: Optional[Any] = ..., region: Optional[Any] = ..., http_client: Optional[Any] = ..., environment: Optional[Any] = ..., edge: Optional[Any] = ...) -> None: ...
    def request(self, method: Any, uri: Any, params: Optional[Any] = ..., data: Optional[Any] = ..., headers: Optional[Any] = ..., auth: Optional[Any] = ..., timeout: Optional[Any] = ..., allow_redirects: bool = ...): ...
    def get_hostname(self, uri: Any): ...
    @property
    def accounts(self): ...
    @property
    def api(self): ...
    @property
    def autopilot(self): ...
    @property
    def chat(self): ...
    @property
    def conversations(self): ...
    @property
    def events(self): ...
    @property
    def fax(self): ...
    @property
    def flex_api(self): ...
    @property
    def insights(self): ...
    @property
    def ip_messaging(self): ...
    @property
    def lookups(self): ...
    @property
    def messaging(self): ...
    @property
    def monitor(self): ...
    @property
    def notify(self): ...
    @property
    def numbers(self): ...
    @property
    def preview(self): ...
    @property
    def pricing(self): ...
    @property
    def proxy(self): ...
    @property
    def serverless(self): ...
    @property
    def studio(self): ...
    @property
    def sync(self): ...
    @property
    def taskrouter(self): ...
    @property
    def trunking(self): ...
    @property
    def verify(self): ...
    @property
    def video(self): ...
    @property
    def voice(self): ...
    @property
    def wireless(self): ...
    @property
    def supersim(self): ...
    @property
    def bulkexports(self): ...
    @property
    def addresses(self): ...
    @property
    def applications(self): ...
    @property
    def authorized_connect_apps(self): ...
    @property
    def available_phone_numbers(self): ...
    @property
    def balance(self): ...
    @property
    def calls(self): ...
    @property
    def conferences(self): ...
    @property
    def connect_apps(self): ...
    @property
    def incoming_phone_numbers(self): ...
    @property
    def keys(self): ...
    @property
    def messages(self): ...
    @property
    def new_keys(self): ...
    @property
    def new_signing_keys(self): ...
    @property
    def notifications(self): ...
    @property
    def outgoing_caller_ids(self): ...
    @property
    def queues(self): ...
    @property
    def recordings(self): ...
    @property
    def signing_keys(self): ...
    @property
    def sip(self): ...
    @property
    def short_codes(self): ...
    @property
    def tokens(self): ...
    @property
    def transcriptions(self): ...
    @property
    def usage(self): ...
    @property
    def validation_requests(self): ...

def TwilioClient(*args: Any) -> Any: ...

def TwilioRestClient(*args: Any) -> Any: ...

def TwilioIpMessagingClient(*args: Any) -> Any: ...

def TwilioLookupsClient(*args: Any) -> Any: ...

def TwilioMonitorClient(*args: Any) -> Any: ...

def TwilioPricingClient(*args: Any) -> Any: ...

def TwilioTaskRouterClient(*args: Any) -> Any: ...

def TwilioTrunkingClient(*args: Any) -> Any: ...

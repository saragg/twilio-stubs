from twilio.base import deserialize as deserialize, values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page
from typing import Any, Optional

class MemberList(ListResource):
    def __init__(self, version: Any, account_sid: Any, queue_sid: Any) -> None: ...
    def stream(self, limit: Optional[Any] = ..., page_size: Optional[Any] = ...): ...
    def list(self, limit: Optional[Any] = ..., page_size: Optional[Any] = ...): ...
    def page(self, page_token: Any = ..., page_number: Any = ..., page_size: Any = ...): ...
    def get_page(self, target_url: Any): ...
    def get(self, call_sid: Any): ...
    def __call__(self, call_sid: Any): ...

class MemberPage(Page):
    def __init__(self, version: Any, response: Any, solution: Any) -> None: ...
    def get_instance(self, payload: Any): ...

class MemberContext(InstanceContext):
    def __init__(self, version: Any, account_sid: Any, queue_sid: Any, call_sid: Any) -> None: ...
    def fetch(self): ...
    def update(self, url: Any, method: Any = ...): ...

class MemberInstance(InstanceResource):
    def __init__(self, version: Any, payload: Any, account_sid: Any, queue_sid: Any, call_sid: Optional[Any] = ...) -> None: ...
    @property
    def call_sid(self): ...
    @property
    def date_enqueued(self): ...
    @property
    def position(self): ...
    @property
    def uri(self): ...
    @property
    def wait_time(self): ...
    @property
    def queue_sid(self): ...
    def fetch(self): ...
    def update(self, url: Any, method: Any = ...): ...

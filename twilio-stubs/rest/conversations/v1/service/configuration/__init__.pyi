from twilio.base import values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page
from twilio.rest.conversations.v1.service.configuration.notification import NotificationList as NotificationList
from typing import Any

class ConfigurationList(ListResource):
    def __init__(self, version: Any, chat_service_sid: Any) -> None: ...
    @property
    def notifications(self): ...
    def get(self): ...
    def __call__(self): ...

class ConfigurationPage(Page):
    def __init__(self, version: Any, response: Any, solution: Any) -> None: ...
    def get_instance(self, payload: Any): ...

class ConfigurationContext(InstanceContext):
    def __init__(self, version: Any, chat_service_sid: Any) -> None: ...
    def fetch(self): ...
    def update(self, default_conversation_creator_role_sid: Any = ..., default_conversation_role_sid: Any = ..., default_chat_service_role_sid: Any = ...): ...

class ConfigurationInstance(InstanceResource):
    def __init__(self, version: Any, payload: Any, chat_service_sid: Any) -> None: ...
    @property
    def chat_service_sid(self): ...
    @property
    def default_conversation_creator_role_sid(self): ...
    @property
    def default_conversation_role_sid(self): ...
    @property
    def default_chat_service_role_sid(self): ...
    @property
    def url(self): ...
    @property
    def links(self): ...
    def fetch(self): ...
    def update(self, default_conversation_creator_role_sid: Any = ..., default_conversation_role_sid: Any = ..., default_chat_service_role_sid: Any = ...): ...

from twilio.base import values as values
from twilio.base.instance_context import InstanceContext as InstanceContext
from twilio.base.instance_resource import InstanceResource as InstanceResource
from twilio.base.list_resource import ListResource as ListResource
from twilio.base.page import Page as Page
from typing import Any

class NotificationList(ListResource):
    def __init__(self, version: Any, chat_service_sid: Any) -> None: ...
    def get(self): ...
    def __call__(self): ...

class NotificationPage(Page):
    def __init__(self, version: Any, response: Any, solution: Any) -> None: ...
    def get_instance(self, payload: Any): ...

class NotificationContext(InstanceContext):
    def __init__(self, version: Any, chat_service_sid: Any) -> None: ...
    def update(self, log_enabled: Any = ..., new_message_enabled: Any = ..., new_message_template: Any = ..., new_message_sound: Any = ..., new_message_badge_count_enabled: Any = ..., added_to_conversation_enabled: Any = ..., added_to_conversation_template: Any = ..., added_to_conversation_sound: Any = ..., removed_from_conversation_enabled: Any = ..., removed_from_conversation_template: Any = ..., removed_from_conversation_sound: Any = ...): ...
    def fetch(self): ...

class NotificationInstance(InstanceResource):
    def __init__(self, version: Any, payload: Any, chat_service_sid: Any) -> None: ...
    @property
    def account_sid(self): ...
    @property
    def chat_service_sid(self): ...
    @property
    def new_message(self): ...
    @property
    def added_to_conversation(self): ...
    @property
    def removed_from_conversation(self): ...
    @property
    def log_enabled(self): ...
    @property
    def url(self): ...
    def update(self, log_enabled: Any = ..., new_message_enabled: Any = ..., new_message_template: Any = ..., new_message_sound: Any = ..., new_message_badge_count_enabled: Any = ..., added_to_conversation_enabled: Any = ..., added_to_conversation_template: Any = ..., added_to_conversation_sound: Any = ..., removed_from_conversation_enabled: Any = ..., removed_from_conversation_template: Any = ..., removed_from_conversation_sound: Any = ...): ...
    def fetch(self): ...
